{
  "info": {
    "name": "E-Wallet API Tests",
    "description": "Collection for testing E-Wallet API endpoints using Postman Runner",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "0. Initial Setup",
      "item": [
        {
          "name": "Create First Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Admin user created\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.role).to.eql(\"admin\");",
                  "    pm.environment.set(\"admin_token\", jsonData.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-Setup-Key",
                "value": "{{setup_key}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"secureadminpass123\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/setup-admin",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "setup-admin"]
            }
          }
        }
      ]
    },
    {
      "name": "1. User Registration and Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.be.a('string');",
                  "    pm.environment.set(\"user_token\", jsonData.token);",
                  "});",
                  "",
                  "pm.test(\"User details are correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.email).to.eql(\"user@example.com\");",
                  "    pm.expect(jsonData.user.firstName).to.eql(\"John\");",
                  "    pm.expect(jsonData.user.lastName).to.eql(\"Doe\");",
                  "    pm.environment.set(\"user_id\", jsonData.user.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.be.a('string');",
                  "    pm.environment.set(\"user_token\", jsonData.token);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"user@example.com\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          }
        }
      ]
    },
    {
      "name": "2. KYC Process",
      "item": [
        {
          "name": "Initiate KYC",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"KYC status is pending\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"pending\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/kyc/initiate",
              "host": ["{{base_url}}"],
              "path": ["api", "kyc", "initiate"]
            }
          }
        },
        {
          "name": "Upload KYC Document",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Document uploaded successfully\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.documents).to.be.an('array').that.is.not.empty;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "document",
                  "type": "file",
                  "src": "/path/to/your/document.pdf"
                },
                {
                  "key": "documentType",
                  "value": "identity",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/api/kyc/upload-document",
              "host": ["{{base_url}}"],
              "path": ["api", "kyc", "upload-document"]
            }
          }
        },
        {
          "name": "Get KYC Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"KYC status is valid\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.be.oneOf(['pending', 'approved', 'rejected']);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/kyc/status",
              "host": ["{{base_url}}"],
              "path": ["api", "kyc", "status"]
            }
          }
        }
      ]
    },
    {
      "name": "3. Wallet Operations",
      "item": [
        {
          "name": "Create Wallet",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Wallet created with correct balance\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.balance).to.eql(100);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"initialBalance\": 100\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/wallet/create",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "create"]
            }
          }
        },
        {
          "name": "Get Balance",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Balance is correct\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.balance).to.be.a('number');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/wallet/balance",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "balance"]
            }
          }
        },
        {
          "name": "Deposit",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Deposit successful\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('successful');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 50,\n    \"paymentMethodId\": \"pm_123456789\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/wallet/deposit",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "deposit"]
            }
          }
        },
        {
          "name": "Withdraw",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Withdrawal successful\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('successful');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 25\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/wallet/withdraw",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "withdraw"]
            }
          }
        },
        {
          "name": "Get Transactions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Transactions are returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/wallet/transactions",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "transactions"]
            }
          }
        }
      ]
    },
    {
      "name": "4. Advanced Wallet Operations",
      "item": [
        {
          "name": "Create Payment Intent",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Payment Intent created\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.clientSecret).to.be.a('string');",
                  "    pm.environment.set(\"payment_intent_id\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 50\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/wallet/create-payment-intent",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "create-payment-intent"]
            }
          }
        },
        {
          "name": "Confirm Payment Intent",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Payment Intent confirmed\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.status).to.eql(\"succeeded\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"paymentIntentId\": \"{{payment_intent_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/wallet/confirm-payment-intent",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "confirm-payment-intent"]
            }
          }
        },
        {
          "name": "Generate QR",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"QR code generated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.qrCodeDataURL).to.be.a('string');",
                  "    pm.expect(jsonData.paymentId).to.be.a('string');",
                  "    pm.environment.set(\"qr_payment_id\", jsonData.paymentId);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"amount\": 50\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/wallet/generate-qr",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "generate-qr"]
            }
          }
        },
        {
          "name": "Initiate QR Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"QR Payment initiated\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.clientSecret).to.be.a('string');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"paymentId\": \"{{qr_payment_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/wallet/initiate-qr-payment",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "initiate-qr-payment"]
            }
          }
        },
        {
          "name": "Confirm QR Payment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"QR Payment confirmed\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.message).to.include('successful');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{user_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"paymentIntentId\": \"{{payment_intent_id}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/wallet/confirm-qr-payment",
              "host": ["{{base_url}}"],
              "path": ["api", "wallet", "confirm-qr-payment"]
            }
          }
        }
      ]
    },
    {
      "name": "5. Admin Operations",
      "item": [
        {
          "name": "Create Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Admin user created\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.role).to.eql(\"admin\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"email\": \"newadmin@example.com\",\n    \"password\": \"adminpass123\",\n    \"firstName\": \"Admin\",\n    \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/create-admin",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "create-admin"]
            }
          }
        },
        {
          "name": "Make User Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User role updated to admin\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.role).to.eql(\"admin\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/make-admin/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "make-admin", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Remove Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User role updated to regular user\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user.role).to.eql(\"user\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{admin_token}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/remove-admin/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "remove-admin", "{{user_id}}"]
            }
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000"
    },
    {
      "key": "setup_key",
      "value": "your_secure_setup_key_here"
    },
    {
      "key": "admin_token",
      "value": "will_be_set_after_admin_creation"
    },
    {
      "key": "user_token",
      "value": "your_user_jwt_token_here"
    },
    {
      "key": "user_id",
      "value": "user_id_to_update"
    },
    {
      "key": "payment_intent_id",
      "value": "pi_your_payment_intent_id"
    },
    {
      "key": "qr_payment_id",
      "value": "qr_your_payment_id"
    }
  ]
}
